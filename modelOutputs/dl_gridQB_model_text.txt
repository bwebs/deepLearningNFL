  |                                                                                                                  |                                                                                                          |   0%  |                                                                                                                  |=                                                                                                         |   1%  |                                                                                                                  |==                                                                                                        |   2%  |                                                                                                                  |===                                                                                                       |   2%  |                                                                                                                  |===                                                                                                       |   3%  |                                                                                                                  |====                                                                                                      |   3%  |                                                                                                                  |====                                                                                                      |   4%  |                                                                                                                  |=====                                                                                                     |   4%  |                                                                                                                  |=====                                                                                                     |   5%  |                                                                                                                  |======                                                                                                    |   5%  |                                                                                                                  |======                                                                                                    |   6%  |                                                                                                                  |=======                                                                                                   |   6%  |                                                                                                                  |=======                                                                                                   |   7%  |                                                                                                                  |========                                                                                                  |   7%  |                                                                                                                  |========                                                                                                  |   8%  |                                                                                                                  |=========                                                                                                 |   8%  |                                                                                                                  |=========                                                                                                 |   9%  |                                                                                                                  |==========                                                                                                |   9%  |                                                                                                                  |==========                                                                                                |  10%  |                                                                                                                  |===========                                                                                               |  10%  |                                                                                                                  |===========                                                                                               |  11%  |                                                                                                                  |============                                                                                              |  11%  |                                                                                                                  |============                                                                                              |  12%  |                                                                                                                  |=============                                                                                             |  12%  |                                                                                                                  |=============                                                                                             |  13%  |                                                                                                                  |==============                                                                                            |  13%  |                                                                                                                  |==============                                                                                            |  14%  |                                                                                                                  |===============                                                                                           |  14%  |                                                                                                                  |===============                                                                                           |  15%  |                                                                                                                  |================                                                                                          |  15%  |                                                                                                                  |=================                                                                                         |  16%  |                                                                                                                  |==================                                                                                        |  17%  |                                                                                                                  |===================                                                                                       |  17%  |                                                                                                                  |===================                                                                                       |  18%  |                                                                                                                  |====================                                                                                      |  18%  |                                                                                                                  |====================                                                                                      |  19%  |                                                                                                                  |=====================                                                                                     |  19%  |                                                                                                                  |=====================                                                                                     |  20%  |                                                                                                                  |======================                                                                                    |  20%  |                                                                                                                  |======================                                                                                    |  21%  |                                                                                                                  |=======================                                                                                   |  21%  |                                                                                                                  |=======================                                                                                   |  22%  |                                                                                                                  |========================                                                                                  |  22%  |                                                                                                                  |========================                                                                                  |  23%  |                                                                                                                  |=========================                                                                                 |  23%  |                                                                                                                  |=========================                                                                                 |  24%  |                                                                                                                  |==========================                                                                                |  24%  |                                                                                                                  |==========================                                                                                |  25%  |                                                                                                                  |===========================                                                                               |  25%  |                                                                                                                  |===========================                                                                               |  26%  |                                                                                                                  |============================                                                                              |  26%  |                                                                                                                  |============================                                                                              |  27%  |                                                                                                                  |=============================                                                                             |  27%  |                                                                                                                  |=============================                                                                             |  28%  |                                                                                                                  |==============================                                                                            |  28%  |                                                                                                                  |==============================                                                                            |  29%  |                                                                                                                  |===============================                                                                           |  29%  |                                                                                                                  |===============================                                                                           |  30%  |                                                                                                                  |================================                                                                          |  30%  |                                                                                                                  |================================                                                                          |  31%  |                                                                                                                  |=================================                                                                         |  31%  |                                                                                                                  |=================================                                                                         |  32%  |                                                                                                                  |==================================                                                                        |  32%  |                                                                                                                  |===================================                                                                       |  33%  |                                                                                                                  |====================================                                                                      |  34%  |                                                                                                                  |=====================================                                                                     |  34%  |                                                                                                                  |=====================================                                                                     |  35%  |                                                                                                                  |======================================                                                                    |  36%  |                                                                                                                  |=======================================                                                                   |  36%  |                                                                                                                  |=======================================                                                                   |  37%  |                                                                                                                  |========================================                                                                  |  37%  |                                                                                                                  |========================================                                                                  |  38%  |                                                                                                                  |=========================================                                                                 |  38%  |                                                                                                                  |=========================================                                                                 |  39%  |                                                                                                                  |==========================================                                                                |  39%  |                                                                                                                  |==========================================                                                                |  40%  |                                                                                                                  |===========================================                                                               |  40%  |                                                                                                                  |===========================================                                                               |  41%  |                                                                                                                  |============================================                                                              |  41%  |                                                                                                                  |============================================                                                              |  42%  |                                                                                                                  |=============================================                                                             |  42%  |                                                                                                                  |=============================================                                                             |  43%  |                                                                                                                  |==============================================                                                            |  43%  |                                                                                                                  |==============================================                                                            |  44%  |                                                                                                                  |===============================================                                                           |  44%  |                                                                                                                  |===============================================                                                           |  45%  |                                                                                                                  |================================================                                                          |  45%  |                                                                                                                  |================================================                                                          |  46%  |                                                                                                                  |=================================================                                                         |  46%  |                                                                                                                  |=================================================                                                         |  47%  |                                                                                                                  |==================================================                                                        |  47%  |                                                                                                                  |==================================================                                                        |  48%  |                                                                                                                  |===================================================                                                       |  48%  |                                                                                                                  |====================================================                                                      |  49%  |                                                                                                                  |=====================================================                                                     |  50%  |                                                                                                                  |======================================================                                                    |  51%  |                                                                                                                  |=======================================================                                                   |  51%  |                                                                                                                  |=======================================================                                                   |  52%  |                                                                                       [1] "RB"
  |                                                                                                                  |                                                                                                          |   0%  |                                                                                                                  |==========================================================================================================| 100%
  |                                                                                                                  |                                                                                                          |   0%  |                                                                                                                  |==========================================================================================================| 100%
[1] "WR"
  |                                                                                                                  |                                                                                                          |   0%  |                                                                                                                  |==========================================================================================================| 100%
  |                                                                                                                  |                                                                                                          |   0%  |                                                                                                                  |==========================================================================================================| 100%
[1] "TE"
[1] "WR"

ERROR: Unexpected HTTP Status code: 400 Bad Request (url = http://localhost:54321/3/Parse)

java.lang.IllegalArgumentException
 [1] "java.lang.IllegalArgumentException: Total input file size of 801.3 KB is much larger than total cluster memory of Zero  , please use either a larger cluster or smaller data."
 [2] "    water.parser.ParseDataset.forkParseDataset(ParseDataset.java:161)"                                                                                                        
 [3] "    water.parser.ParseDataset.parse(ParseDataset.java:44)"                                                                                                                    
 [4] "    water.api.ParseHandler.parse(ParseHandler.java:36)"                                                                                                                       
 [5] "    sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"                                                                                                              
 [6] "    sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)"                                                                                            
 [7] "    sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"                                                                                    
 [8] "    java.lang.reflect.Method.invoke(Method.java:498)"                                                                                                                         
 [9] "    water.api.Handler.handle(Handler.java:56)"                                                                                                                                
[10] "    water.api.RequestServer.serve(RequestServer.java:394)"                                                                                                                    
[11] "    water.api.RequestServer.doGeneric(RequestServer.java:245)"                                                                                                                
[12] "    water.api.RequestServer.doPost(RequestServer.java:199)"                                                                                                                   
[13] "    javax.servlet.http.HttpServlet.service(HttpServlet.java:755)"                                                                                                             
[14] "    javax.servlet.http.HttpServlet.service(HttpServlet.java:848)"                                                                                                             
[15] "    org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)"                                                                                                   
[16] "    org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)"                                                                                               
[17] "    org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)"                                                                                            
[18] "    org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)"                                                                                              
[19] "    org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)"                                                                                        
[20] "    org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)"                                                                                       
[21] "    org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)"                                                                                                
[22] "    org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)"                                                                                         
[23] "    org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)"                                                                                        
[24] "    org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)"                                                                                            
[25] "    org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)"                                                                                    
[26] "    org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)"                                                                                          
[27] "    org.eclipse.jetty.server.Server.handle(Server.java:370)"                                                                                                                  
[28] "    org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)"                                                                           
[29] "    org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)"                                                                            
[30] "    org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:982)"                                                                                 
[31] "    org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1043)"                                                                 
[32] "    org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)"                                                                                                         
[33] "    org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)"                                                                                                    
[34] "    org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)"                                                                                   
[35] "    org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)"                                                                             
[36] "    org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)"                                                                                         
[37] "    org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)"                                                                                          
[38] "    java.lang.Thread.run(Thread.java:745)"                                                                                                                                    

[1] "WR"

ERROR: Unexpected HTTP Status code: 400 Bad Request (url = http://localhost:54321/3/Parse)

java.lang.IllegalArgumentException
 [1] "java.lang.IllegalArgumentException: Total input file size of 801.3 KB is much larger than total cluster memory of Zero  , please use either a larger cluster or smaller data."
 [2] "    water.parser.ParseDataset.forkParseDataset(ParseDataset.java:161)"                                                                                                        
 [3] "    water.parser.ParseDataset.parse(ParseDataset.java:44)"                                                                                                                    
 [4] "    water.api.ParseHandler.parse(ParseHandler.java:36)"                                                                                                                       
 [5] "    sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"                                                                                                              
 [6] "    sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)"                                                                                            
 [7] "    sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"                                                                                    
 [8] "    java.lang.reflect.Method.invoke(Method.java:498)"                                                                                                                         
 [9] "    water.api.Handler.handle(Handler.java:56)"                                                                                                                                
[10] "    water.api.RequestServer.serve(RequestServer.java:394)"                                                                                                                    
[11] "    water.api.RequestServer.doGeneric(RequestServer.java:245)"                                                                                                                
[12] "    water.api.RequestServer.doPost(RequestServer.java:199)"                                                                                                                   
[13] "    javax.servlet.http.HttpServlet.service(HttpServlet.java:755)"                                                                                                             
[14] "    javax.servlet.http.HttpServlet.service(HttpServlet.java:848)"                                                                                                             
[15] "    org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)"                                                                                                   
[16] "    org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)"                                                                                               
[17] "    org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)"                                                                                            
[18] "    org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)"                                                                                              
[19] "    org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)"                                                                                        
[20] "    org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)"                                                                                       
[21] "    org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)"                                                                                                
[22] "    org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)"                                                                                         
[23] "    org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)"                                                                                        
[24] "    org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)"                                                                                            
[25] "    org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)"                                                                                    
[26] "    org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)"                                                                                          
[27] "    org.eclipse.jetty.server.Server.handle(Server.java:370)"                                                                                                                  
[28] "    org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)"                                                                           
[29] "    org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)"                                                                            
[30] "    org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:982)"                                                                                 
[31] "    org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1043)"                                                                 
[32] "    org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)"                                                                                                         
[33] "    org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)"                                                                                                    
[34] "    org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)"                                                                                   
[35] "    org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)"                                                                             
[36] "    org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)"                                                                                         
[37] "    org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)"                                                                                          
[38] "    java.lang.Thread.run(Thread.java:745)"                                                                                                                                    

 Connection successful!

R is connected to the H2O cluster: 
    H2O cluster uptime:         1 hours 36 minutes 
    H2O cluster version:        3.10.0.6 
    H2O cluster version age:    1 month and 2 days  
    H2O cluster name:           H2O_started_from_R_bryanfweber_idp001 
    H2O cluster total nodes:    1 
    H2O cluster total memory:   0.00 GB 
    H2O cluster total cores:    4 
    H2O cluster allowed cores:  4 
    H2O cluster healthy:        TRUE 
    H2O Connection ip:          localhost 
    H2O Connection port:        54321 
    H2O Connection proxy:       NA 
    R Version:                  R version 3.3.1 (2016-06-21) 

[1] 0
function (prompt = TRUE) 
{
    conn <- get("SERVER", .pkg.env)
    if (is.null(conn)) 
        stop("There is no H2O instance running.")
    if (!h2o.clusterIsUp(conn)) 
        stop("There is no H2O instance running at ", h2o.getBaseURL(conn))
    if (!is.logical(prompt) || length(prompt) != 1L || is.na(prompt)) 
        stop("`prompt` must be TRUE or FALSE")
    if (prompt) {
        message <- sprintf("Are you sure you want to shutdown the H2O instance running at %s (Y/N)? ", 
            h2o.getBaseURL(conn))
        ans <- readline(message)
        temp <- substr(ans, 1L, 1L)
    }
    else {
        temp <- "y"
    }
    if (temp == "Y" || temp == "y") {
        .h2o.doRawREST(conn = conn, method = "POST", urlSuffix = .h2o.__SHUTDOWN, 
            h2oRestApiVersion = .h2o.__REST_API_VERSION)
        assign("SERVER", NULL, .pkg.env)
    }
    if ((conn@ip == "localhost" || conn@ip == "127.0.0.1") && 
        .h2o.startedH2O()) {
        pid_file <- .h2o.getTmpFile("pid")
        if (file.exists(pid_file)) 
            file.remove(pid_file)
    }
}
<environment: namespace:h2o>
[1] TRUE

H2O is not running yet, starting it now...

Note:  In case of errors look at the following log files:
    /var/folders/c5/cc9dbmnj4tl5c074np86s5pw0000gn/T//RtmpTeTabv/h2o_bryanfweber_started_from_r.out
    /var/folders/c5/cc9dbmnj4tl5c074np86s5pw0000gn/T//RtmpTeTabv/h2o_bryanfweber_started_from_r.err


Starting H2O JVM and connecting: ... Connection successful!

R is connected to the H2O cluster: 
    H2O cluster uptime:         2 seconds 890 milliseconds 
    H2O cluster version:        3.10.0.6 
    H2O cluster version age:    1 month and 2 days  
    H2O cluster name:           H2O_started_from_R_bryanfweber_hzr964 
    H2O cluster total nodes:    1 
    H2O cluster total memory:   1.78 GB 
    H2O cluster total cores:    4 
    H2O cluster allowed cores:  4 
    H2O cluster healthy:        TRUE 
    H2O Connection ip:          localhost 
    H2O Connection port:        54321 
    H2O Connection proxy:       NA 
    R Version:                  R version 3.3.1 (2016-06-21) 

[1] 0
[1] "WR"
  |                                                                                                                  |                                                                                                          |   0%  |                                                                                                                  |==========================================================================================================| 100%
  |                                                                                                                  |                                                                                                          |   0%  |                                                                                                                  |==========================================================================================================| 100%
t water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10.4169122965636
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10.3951215489195
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10.3042060246931
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20.7497041234394
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:39] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:39] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10.4169122965636
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10.3951215489195
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10.3042060246931
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20.7497041234394
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 13:49:44] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 13:49:44] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
H2O Grid Details
================

Grid ID: dl_gridQB 
Used hyper parameters: 
  -  activation 
  -  epochs 
  -  hidden 
  -  input_dropout_ratio 
  -  rate 
  -  rate_annealing 
Number of models: 526 
Number of failed models: 194 

Hyper-Parameter Search Summary: ordered by increasing rmse
            activation             epochs      hidden input_dropout_ratio rate rate_annealing           model_ids
1 RectifierWithDropout  21.09520810335525 [I@565e3543                 0.0 0.01         1.0E-8  dl_gridQB_model_45
2 RectifierWithDropout  20.82963314566342 [I@40b90977                 0.0 0.01         1.0E-6 dl_gridQB_model_489
3      TanhWithDropout 10.405716251105778   [I@7c287a                0.05 0.01         1.0E-6 dl_gridQB_model_556
4      TanhWithDropout 20.774972043883935 [I@2ee141e9                 0.0 0.01         1.0E-7 dl_gridQB_model_250
5 RectifierWithDropout  20.87686390044918  [I@9329d5b                 0.0 0.01         1.0E-6 dl_gridQB_model_501
               rmse
1 8.321900277510592
2 8.337772677412259
3 8.366035773139945
4 8.381706719747518
5 8.402499617133836

---
    activation             epochs      hidden input_dropout_ratio rate rate_annealing           model_ids
521       Tanh 10.358372222331337 [I@37b7fa6f                 0.0 0.02         1.0E-6 dl_gridQB_model_613
522  Rectifier 10.409123209336666   [I@9521ad                 0.0 0.02         1.0E-8 dl_gridQB_model_132
523       Tanh  20.79434521407538 [I@532c4ba3                 0.0 0.02         1.0E-6 dl_gridQB_model_619
524       Tanh 10.561150646606906 [I@7e8b29a3                 0.0 0.02         1.0E-7 dl_gridQB_model_373
525       Tanh  20.82430194473806 [I@76e7d09f                0.05 0.02         1.0E-8 dl_gridQB_model_199
526       Tanh  20.85120335830441 [I@5f561fa7                0.05 0.02         1.0E-7 dl_gridQB_model_439
                  rmse
521  10.54435911291899
522 10.570248427137606
523 10.640853930843623
524 10.722391927035831
525 10.754155734839712
526 11.277662264920773
Failed models
-------------
        activation             epochs       hidden input_dropout_ratio rate rate_annealing status_failed
            Maxout               10.0     [32, 32]                 0.0 0.01         1.0E-8          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.01         1.0E-8          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-8          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-8          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.01         1.0E-8          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.01         1.0E-8          FAIL
            Maxout               10.0     [32, 32]                0.05 0.01         1.0E-8          FAIL
            Maxout               20.0     [32, 32]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.01         1.0E-8          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.01         1.0E-8          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.01         1.0E-8          FAIL
            Maxout               10.0     [64, 64]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.01         1.0E-8          FAIL
            Maxout               20.0     [64, 64]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.01         1.0E-8          FAIL
            Maxout               10.0         [16]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0         [16]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0         [16]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0         [16]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0         [32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0         [32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0         [32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0         [32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [32, 32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0         [16]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0         [16]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0         [16]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0         [16]                0.05 0.02         1.0E-8          FAIL
         Rectifier               10.0         [32]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0         [32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0         [32]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0         [32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0         [32]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0     [32, 32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [32, 32]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0     [32, 32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
         Rectifier               10.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout 10.416912296563586     [32, 32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.01         1.0E-7          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.01         1.0E-7          FAIL
            Maxout               10.0     [32, 32]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [32, 32]                0.05 0.01         1.0E-7          FAIL
            Maxout               20.0     [32, 32]                0.05 0.01         1.0E-7          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
         Rectifier               20.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
            Maxout               10.0     [64, 64]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.01         1.0E-7          FAIL
            Maxout               20.0     [64, 64]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.01         1.0E-7          FAIL
            Maxout               10.0         [16]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout 10.395121548919526         [16]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0         [16]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0         [16]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0         [32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0         [32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0         [32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0         [32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [32, 32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0         [16]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0         [16]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0         [16]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0         [16]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0         [32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0         [32]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0         [32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0         [32]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0     [32, 32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [32, 32]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0     [32, 32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
         Rectifier               20.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0         [32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0         [32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0     [32, 32]                0.05 0.01         1.0E-6          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.01         1.0E-6          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.01         1.0E-6          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.01         1.0E-6          FAIL
            Maxout               10.0     [64, 64]                0.05 0.01         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.01         1.0E-6          FAIL
            Maxout               20.0     [64, 64]                0.05 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.01         1.0E-6          FAIL
            Maxout               10.0         [16]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0         [16]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0         [16]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0         [16]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0         [32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0         [32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0         [32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0         [32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [32, 32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.02         1.0E-6          FAIL
         Rectifier 10.304206024693078 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
         Rectifier               20.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
         Rectifier               20.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0         [16]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0         [16]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0         [16]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout 20.749704123439376         [16]                0.05 0.02         1.0E-6          FAIL
            Maxout               10.0         [32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0         [32]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0         [32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0         [32]                0.05 0.02         1.0E-6          FAIL
            Maxout               10.0     [32, 32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [32, 32]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0     [32, 32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.02         1.0E-6          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.02         1.0E-6          FAIL
            Maxout               10.0     [64, 64]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0     [64, 64]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.02         1.0E-6          FAIL
                                  msgs_failed
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
H2O Grid Summary
================

Grid ID: dl_gridQB 
Used hyper parameters: 
  -  activation 
  -  epochs 
  -  hidden 
  -  input_dropout_ratio 
  -  rate 
  -  rate_annealing 
Number of models: 526 
  -  dl_gridQB_model_45 
  -  dl_gridQB_model_489 
  -  dl_gridQB_model_556 
  -  dl_gridQB_model_250 
  -  dl_gridQB_model_501 
  -  dl_gridQB_model_531 
  -  dl_gridQB_model_105 
  -  dl_gridQB_model_484 
  -  dl_gridQB_model_514 
  -  dl_gridQB_model_165 
  -  dl_gridQB_model_532 
  -  dl_gridQB_model_244 
  -  dl_gridQB_model_27 
  -  dl_gridQB_model_256 
  -  dl_gridQB_model_274 
  -  dl_gridQB_model_70 
  -  dl_gridQB_model_3 
  -  dl_gridQB_model_513 
  -  dl_gridQB_model_591 
  -  dl_gridQB_model_525 
  -  dl_gridQB_model_574 
  -  dl_gridQB_model_345 
  -  dl_gridQB_model_16 
  -  dl_gridQB_model_351 
  -  dl_gridQB_model_117 
  -  dl_gridQB_model_279 
  -  dl_gridQB_model_309 
  -  dl_gridQB_model_112 
  -  dl_gridQB_model_81 
  -  dl_gridQB_model_51 
  -  dl_gridQB_model_568 
  -  dl_gridQB_model_69 
  -  dl_gridQB_model_5 
  -  dl_gridQB_model_315 
  -  dl_gridQB_model_495 
  -  dl_gridQB_model_33 
  -  dl_gridQB_model_327 
  -  dl_gridQB_model_490 
  -  dl_gridQB_model_123 
  -  dl_gridQB_model_273 
  -  dl_gridQB_model_537 
  -  dl_gridQB_model_280 
  -  dl_gridQB_model_297 
  -  dl_gridQB_model_508 
  -  dl_gridQB_model_21 
  -  dl_gridQB_model_483 
  -  dl_gridQB_model_75 
  -  dl_gridQB_model_538 
  -  dl_gridQB_model_292 
  -  dl_gridQB_model_285 
  -  dl_gridQB_model_34 
  -  dl_gridQB_model_251 
  -  dl_gridQB_model_573 
  -  dl_gridQB_model_705 
  -  dl_gridQB_model_9 
  -  dl_gridQB_model_304 
  -  dl_gridQB_model_322 
  -  dl_gridQB_model_111 
  -  dl_gridQB_model_562 
  -  dl_gridQB_model_567 
  -  dl_gridQB_model_87 
  -  dl_gridQB_model_633 
  -  dl_gridQB_model_544 
  -  dl_gridQB_model_10 
  -  dl_gridQB_model_519 
  -  dl_gridQB_model_225 
  -  dl_gridQB_model_555 
  -  dl_gridQB_model_94 
  -  dl_gridQB_model_88 
  -  dl_gridQB_model_543 
  -  dl_gridQB_model_598 
  -  dl_gridQB_model_388 
  -  dl_gridQB_model_526 
  -  dl_gridQB_model_316 
  -  dl_gridQB_model_262 
  -  dl_gridQB_model_550 
  -  dl_gridQB_model_267 
  -  dl_gridQB_model_63 
  -  dl_gridQB_model_249 
  -  dl_gridQB_model_4 
  -  dl_gridQB_model_76 
  -  dl_gridQB_model_485 
  -  dl_gridQB_model_352 
  -  dl_gridQB_model_597 
  -  dl_gridQB_model_93 
  -  dl_gridQB_model_118 
  -  dl_gridQB_model_334 
  -  dl_gridQB_model_569 
  -  dl_gridQB_model_82 
  -  dl_gridQB_model_328 
  -  dl_gridQB_model_693 
  -  dl_gridQB_model_507 
  -  dl_gridQB_model_303 
  -  dl_gridQB_model_57 
  -  dl_gridQB_model_83 
  -  dl_gridQB_model_268 
  -  dl_gridQB_model_375 
  -  dl_gridQB_model_52 
  -  dl_gridQB_model_357 
  -  dl_gridQB_model_298 
  -  dl_gridQB_model_561 
  -  dl_gridQB_model_663 
  -  dl_gridQB_model_64 
  -  dl_gridQB_model_424 
  -  dl_gridQB_model_339 
  -  dl_gridQB_model_333 
  -  dl_gridQB_model_603 
  -  dl_gridQB_model_255 
  -  dl_gridQB_model_496 
  -  dl_gridQB_model_549 
  -  dl_gridQB_model_243 
  -  dl_gridQB_model_520 
  -  dl_gridQB_model_58 
  -  dl_gridQB_model_585 
  -  dl_gridQB_model_394 
  -  dl_gridQB_model_15 
  -  dl_gridQB_model_28 
  -  dl_gridQB_model_190 
  -  dl_gridQB_model_340 
  -  dl_gridQB_model_628 
  -  dl_gridQB_model_46 
  -  dl_gridQB_model_310 
  -  dl_gridQB_model_435 
  -  dl_gridQB_model_576 
  -  dl_gridQB_model_509 
  -  dl_gridQB_model_39 
  -  dl_gridQB_model_604 
  -  dl_gridQB_model_142 
  -  dl_gridQB_model_592 
  -  dl_gridQB_model_208 
  -  dl_gridQB_model_577 
  -  dl_gridQB_model_370 
  -  dl_gridQB_model_502 
  -  dl_gridQB_model_610 
  -  dl_gridQB_model_124 
  -  dl_gridQB_model_321 
  -  dl_gridQB_model_441 
  -  dl_gridQB_model_261 
  -  dl_gridQB_model_497 
  -  dl_gridQB_model_214 
  -  dl_gridQB_model_669 
  -  dl_gridQB_model_541 
  -  dl_gridQB_model_699 
  -  dl_gridQB_model_291 
  -  dl_gridQB_model_11 
  -  dl_gridQB_model_551 
  -  dl_gridQB_model_423 
  -  dl_gridQB_model_40 
  -  dl_gridQB_model_22 
  -  dl_gridQB_model_387 
  -  dl_gridQB_model_61 
  -  dl_gridQB_model_670 
  -  dl_gridQB_model_343 
  -  dl_gridQB_model_675 
  -  dl_gridQB_model_231 
  -  dl_gridQB_model_615 
  -  dl_gridQB_model_681 
  -  dl_gridQB_model_563 
  -  dl_gridQB_model_430 
  -  dl_gridQB_model_557 
  -  dl_gridQB_model_369 
  -  dl_gridQB_model_207 
  -  dl_gridQB_model_331 
  -  dl_gridQB_model_153 
  -  dl_gridQB_model_477 
  -  dl_gridQB_model_639 
  -  dl_gridQB_model_363 
  -  dl_gridQB_model_286 
  -  dl_gridQB_model_154 
  -  dl_gridQB_model_65 
  -  dl_gridQB_model_465 
  -  dl_gridQB_model_189 
  -  dl_gridQB_model_517 
  -  dl_gridQB_model_335 
  -  dl_gridQB_model_311 
  -  dl_gridQB_model_664 
  -  dl_gridQB_model_510 
  -  dl_gridQB_model_184 
  -  dl_gridQB_model_97 
  -  dl_gridQB_model_130 
  -  dl_gridQB_model_317 
  -  dl_gridQB_model_100 
  -  dl_gridQB_model_237 
  -  dl_gridQB_model_106 
  -  dl_gridQB_model_30 
  -  dl_gridQB_model_503 
  -  dl_gridQB_model_358 
  -  dl_gridQB_model_195 
  -  dl_gridQB_model_31 
  -  dl_gridQB_model_129 
  -  dl_gridQB_model_148 
  -  dl_gridQB_model_71 
  -  dl_gridQB_model_247 
  -  dl_gridQB_model_307 
  -  dl_gridQB_model_381 
  -  dl_gridQB_model_73 
  -  dl_gridQB_model_405 
  -  dl_gridQB_model_67 
  -  dl_gridQB_model_135 
  -  dl_gridQB_model_323 
  -  dl_gridQB_model_305 
  -  dl_gridQB_model_85 
  -  dl_gridQB_model_283 
  -  dl_gridQB_model_580 
  -  dl_gridQB_model_96 
  -  dl_gridQB_model_436 
  -  dl_gridQB_model_364 
  -  dl_gridQB_model_183 
  -  dl_gridQB_model_429 
  -  dl_gridQB_model_241 
  -  dl_gridQB_model_411 
  -  dl_gridQB_model_177 
  -  dl_gridQB_model_586 
  -  dl_gridQB_model_160 
  -  dl_gridQB_model_565 
  -  dl_gridQB_model_448 
  -  dl_gridQB_model_257 
  -  dl_gridQB_model_589 
  -  dl_gridQB_model_688 
  -  dl_gridQB_model_201 
  -  dl_gridQB_model_457 
  -  dl_gridQB_model_547 
  -  dl_gridQB_model_147 
  -  dl_gridQB_model_634 
  -  dl_gridQB_model_346 
  -  dl_gridQB_model_360 
  -  dl_gridQB_model_582 
  -  dl_gridQB_model_277 
  -  dl_gridQB_model_546 
  -  dl_gridQB_model_337 
  -  dl_gridQB_model_652 
  -  dl_gridQB_model_393 
  -  dl_gridQB_model_263 
  -  dl_gridQB_model_687 
  -  dl_gridQB_model_579 
  -  dl_gridQB_model_454 
  -  dl_gridQB_model_213 
  -  dl_gridQB_model_1 
  -  dl_gridQB_model_609 
  -  dl_gridQB_model_270 
  -  dl_gridQB_model_466 
  -  dl_gridQB_model_245 
  -  dl_gridQB_model_29 
  -  dl_gridQB_model_706 
  -  dl_gridQB_model_295 
  -  dl_gridQB_model_399 
  -  dl_gridQB_model_259 
  -  dl_gridQB_model_84 
  -  dl_gridQB_model_657 
  -  dl_gridQB_model_301 
  -  dl_gridQB_model_136 
  -  dl_gridQB_model_442 
  -  dl_gridQB_model_487 
  -  dl_gridQB_model_202 
  -  dl_gridQB_model_77 
  -  dl_gridQB_model_651 
  -  dl_gridQB_model_472 
  -  dl_gridQB_model_491 
  -  dl_gridQB_model_99 
  -  dl_gridQB_model_717 
  -  dl_gridQB_model_103 
  -  dl_gridQB_model_6 
  -  dl_gridQB_model_141 
  -  dl_gridQB_model_481 
  -  dl_gridQB_model_0 
  -  dl_gridQB_model_417 
  -  dl_gridQB_model_240 
  -  dl_gridQB_model_594 
  -  dl_gridQB_model_545 
  -  dl_gridQB_model_25 
  -  dl_gridQB_model_354 
  -  dl_gridQB_model_294 
  -  dl_gridQB_model_621 
  -  dl_gridQB_model_645 
  -  dl_gridQB_model_23 
  -  dl_gridQB_model_265 
  -  dl_gridQB_model_711 
  -  dl_gridQB_model_480 
  -  dl_gridQB_model_522 
  -  dl_gridQB_model_324 
  -  dl_gridQB_model_627 
  -  dl_gridQB_model_575 
  -  dl_gridQB_model_571 
  -  dl_gridQB_model_24 
  -  dl_gridQB_model_66 
  -  dl_gridQB_model_471 
  -  dl_gridQB_model_493 
  -  dl_gridQB_model_523 
  -  dl_gridQB_model_504 
  -  dl_gridQB_model_460 
  -  dl_gridQB_model_90 
  -  dl_gridQB_model_553 
  -  dl_gridQB_model_505 
  -  dl_gridQB_model_564 
  -  dl_gridQB_model_217 
  -  dl_gridQB_model_89 
  -  dl_gridQB_model_622 
  -  dl_gridQB_model_462 
  -  dl_gridQB_model_196 
  -  dl_gridQB_model_459 
  -  dl_gridQB_model_646 
  -  dl_gridQB_model_542 
  -  dl_gridQB_model_616 
  -  dl_gridQB_model_219 
  -  dl_gridQB_model_355 
  -  dl_gridQB_model_630 
  -  dl_gridQB_model_325 
  -  dl_gridQB_model_570 
  -  dl_gridQB_model_397 
  -  dl_gridQB_model_226 
  -  dl_gridQB_model_640 
  -  dl_gridQB_model_17 
  -  dl_gridQB_model_276 
  -  dl_gridQB_model_48 
  -  dl_gridQB_model_600 
  -  dl_gridQB_model_486 
  -  dl_gridQB_model_238 
  -  dl_gridQB_model_187 
  -  dl_gridQB_model_37 
  -  dl_gridQB_model_535 
  -  dl_gridQB_model_171 
  -  dl_gridQB_model_447 
  -  dl_gridQB_model_712 
  -  dl_gridQB_model_583 
  -  dl_gridQB_model_223 
  -  dl_gridQB_model_697 
  -  dl_gridQB_model_661 
  -  dl_gridQB_model_300 
  -  dl_gridQB_model_516 
  -  dl_gridQB_model_499 
  -  dl_gridQB_model_396 
  -  dl_gridQB_model_694 
  -  dl_gridQB_model_114 
  -  dl_gridQB_model_690 
  -  dl_gridQB_model_166 
  -  dl_gridQB_model_60 
  -  dl_gridQB_model_210 
  -  dl_gridQB_model_282 
  -  dl_gridQB_model_7 
  -  dl_gridQB_model_108 
  -  dl_gridQB_model_426 
  -  dl_gridQB_model_540 
  -  dl_gridQB_model_453 
  -  dl_gridQB_model_72 
  -  dl_gridQB_model_91 
  -  dl_gridQB_model_313 
  -  dl_gridQB_model_700 
  -  dl_gridQB_model_232 
  -  dl_gridQB_model_159 
  -  dl_gridQB_model_62 
  -  dl_gridQB_model_349 
  -  dl_gridQB_model_246 
  -  dl_gridQB_model_172 
  -  dl_gridQB_model_402 
  -  dl_gridQB_model_102 
  -  dl_gridQB_model_222 
  -  dl_gridQB_model_220 
  -  dl_gridQB_model_314 
  -  dl_gridQB_model_511 
  -  dl_gridQB_model_157 
  -  dl_gridQB_model_703 
  -  dl_gridQB_model_529 
  -  dl_gridQB_model_253 
  -  dl_gridQB_model_418 
  -  dl_gridQB_model_204 
  -  dl_gridQB_model_144 
  -  dl_gridQB_model_13 
  -  dl_gridQB_model_444 
  -  dl_gridQB_model_319 
  -  dl_gridQB_model_308 
  -  dl_gridQB_model_376 
  -  dl_gridQB_model_252 
  -  dl_gridQB_model_400 
  -  dl_gridQB_model_336 
  -  dl_gridQB_model_312 
  -  dl_gridQB_model_12 
  -  dl_gridQB_model_205 
  -  dl_gridQB_model_288 
  -  dl_gridQB_model_682 
  -  dl_gridQB_model_163 
  -  dl_gridQB_model_624 
  -  dl_gridQB_model_412 
  -  dl_gridQB_model_330 
  -  dl_gridQB_model_588 
  -  dl_gridQB_model_658 
  -  dl_gridQB_model_684 
  -  dl_gridQB_model_302 
  -  dl_gridQB_model_492 
  -  dl_gridQB_model_667 
  -  dl_gridQB_model_49 
  -  dl_gridQB_model_121 
  -  dl_gridQB_model_463 
  -  dl_gridQB_model_528 
  -  dl_gridQB_model_55 
  -  dl_gridQB_model_126 
  -  dl_gridQB_model_181 
  -  dl_gridQB_model_676 
  -  dl_gridQB_model_42 
  -  dl_gridQB_model_216 
  -  dl_gridQB_model_708 
  -  dl_gridQB_model_120 
  -  dl_gridQB_model_445 
  -  dl_gridQB_model_109 
  -  dl_gridQB_model_162 
  -  dl_gridQB_model_718 
  -  dl_gridQB_model_450 
  -  dl_gridQB_model_264 
  -  dl_gridQB_model_242 
  -  dl_gridQB_model_595 
  -  dl_gridQB_model_115 
  -  dl_gridQB_model_385 
  -  dl_gridQB_model_79 
  -  dl_gridQB_model_390 
  -  dl_gridQB_model_384 
  -  dl_gridQB_model_685 
  -  dl_gridQB_model_421 
  -  dl_gridQB_model_714 
  -  dl_gridQB_model_382 
  -  dl_gridQB_model_36 
  -  dl_gridQB_model_366 
  -  dl_gridQB_model_234 
  -  dl_gridQB_model_2 
  -  dl_gridQB_model_559 
  -  dl_gridQB_model_68 
  -  dl_gridQB_model_178 
  -  dl_gridQB_model_414 
  -  dl_gridQB_model_660 
  -  dl_gridQB_model_168 
  -  dl_gridQB_model_406 
  -  dl_gridQB_model_289 
  -  dl_gridQB_model_271 
  -  dl_gridQB_model_348 
  -  dl_gridQB_model_534 
  -  dl_gridQB_model_43 
  -  dl_gridQB_model_625 
  -  dl_gridQB_model_696 
  -  dl_gridQB_model_211 
  -  dl_gridQB_model_127 
  -  dl_gridQB_model_691 
  -  dl_gridQB_model_14 
  -  dl_gridQB_model_408 
  -  dl_gridQB_model_229 
  -  dl_gridQB_model_150 
  -  dl_gridQB_model_367 
  -  dl_gridQB_model_456 
  -  dl_gridQB_model_637 
  -  dl_gridQB_model_248 
  -  dl_gridQB_model_601 
  -  dl_gridQB_model_478 
  -  dl_gridQB_model_427 
  -  dl_gridQB_model_156 
  -  dl_gridQB_model_186 
  -  dl_gridQB_model_643 
  -  dl_gridQB_model_306 
  -  dl_gridQB_model_78 
  -  dl_gridQB_model_468 
  -  dl_gridQB_model_54 
  -  dl_gridQB_model_174 
  -  dl_gridQB_model_391 
  -  dl_gridQB_model_420 
  -  dl_gridQB_model_180 
  -  dl_gridQB_model_482 
  -  dl_gridQB_model_403 
  -  dl_gridQB_model_80 
  -  dl_gridQB_model_552 
  -  dl_gridQB_model_548 
  -  dl_gridQB_model_554 
  -  dl_gridQB_model_702 
  -  dl_gridQB_model_151 
  -  dl_gridQB_model_648 
  -  dl_gridQB_model_145 
  -  dl_gridQB_model_558 
  -  dl_gridQB_model_607 
  -  dl_gridQB_model_361 
  -  dl_gridQB_model_372 
  -  dl_gridQB_model_318 
  -  dl_gridQB_model_258 
  -  dl_gridQB_model_498 
  -  dl_gridQB_model_475 
  -  dl_gridQB_model_566 
  -  dl_gridQB_model_432 
  -  dl_gridQB_model_709 
  -  dl_gridQB_model_133 
  -  dl_gridQB_model_260 
  -  dl_gridQB_model_8 
  -  dl_gridQB_model_451 
  -  dl_gridQB_model_673 
  -  dl_gridQB_model_666 
  -  dl_gridQB_model_488 
  -  dl_gridQB_model_19 
  -  dl_gridQB_model_74 
  -  dl_gridQB_model_672 
  -  dl_gridQB_model_612 
  -  dl_gridQB_model_138 
  -  dl_gridQB_model_254 
  -  dl_gridQB_model_18 
  -  dl_gridQB_model_175 
  -  dl_gridQB_model_655 
  -  dl_gridQB_model_320 
  -  dl_gridQB_model_198 
  -  dl_gridQB_model_433 
  -  dl_gridQB_model_631 
  -  dl_gridQB_model_469 
  -  dl_gridQB_model_438 
  -  dl_gridQB_model_193 
  -  dl_gridQB_model_606 
  -  dl_gridQB_model_678 
  -  dl_gridQB_model_378 
  -  dl_gridQB_model_679 
  -  dl_gridQB_model_409 
  -  dl_gridQB_model_649 
  -  dl_gridQB_model_560 
  -  dl_gridQB_model_415 
  -  dl_gridQB_model_139 
  -  dl_gridQB_model_379 
  -  dl_gridQB_model_169 
  -  dl_gridQB_model_235 
  -  dl_gridQB_model_20 
  -  dl_gridQB_model_618 
  -  dl_gridQB_model_715 
  -  dl_gridQB_model_613 
  -  dl_gridQB_model_132 
  -  dl_gridQB_model_619 
  -  dl_gridQB_model_373 
  -  dl_gridQB_model_199 
  -  dl_gridQB_model_439 

Number of failed models: 194 
  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321
Note: To see exception stack traces please pass parameter `show_stack_traces = T` to this function.
$model_id
[1] "dl_gridQB_model_45"

$training_frame
[1] "file6a8274888da8_sid_85d0_91"

$validation_frame
[1] "file6a82310c4c5d_sid_85d0_93"

$nfolds
[1] 5

$keep_cross_validation_predictions
[1] FALSE

$keep_cross_validation_fold_assignment
[1] FALSE

$fold_assignment
[1] "AUTO"

$ignore_const_cols
[1] TRUE

$score_each_iteration
[1] FALSE

$balance_classes
[1] FALSE

$max_after_balance_size
[1] 5

$max_confusion_matrix_size
[1] 20

$max_hit_ratio_k
[1] 0

$overwrite_with_best_model
[1] FALSE

$use_all_factor_levels
[1] TRUE

$standardize
[1] TRUE

$activation
[1] "RectifierWithDropout"

$hidden
[1] 32 32 32

$epochs
[1] 21.09521

$train_samples_per_iteration
[1] -2

$target_ratio_comm_to_comp
[1] 0.05

$seed
[1] 8.053488e+18

$adaptive_rate
[1] FALSE

$rho
[1] 0.99

$epsilon
[1] 1e-08

$rate
[1] 0.01

$rate_annealing
[1] 1e-08

$rate_decay
[1] 1

$momentum_start
[1] 0.5

$momentum_ramp
[1] 1e+07

$momentum_stable
[1] 0.9

$nesterov_accelerated_gradient
[1] TRUE

$input_dropout_ratio
[1] 0

$l1
[1] 1e-05

$l2
[1] 1e-05

$max_w2
[1] 10

$initial_weight_distribution
[1] "UniformAdaptive"

$initial_weight_scale
[1] 1

$loss
[1] "Automatic"

$distribution
[1] "AUTO"

$quantile_alpha
[1] 0.5

$tweedie_power
[1] 1.5

$huber_alpha
[1] 0.9

$score_interval
[1] 5

$score_training_samples
[1] 10000

$score_validation_samples
[1] 10000

$score_duty_cycle
[1] 0.025

$classification_stop
[1] 0

$regression_stop
[1] 1e-06

$stopping_rounds
[1] 0

$stopping_metric
[1] "AUTO"

$stopping_tolerance
[1] 0.01

$max_runtime_secs
[1] 0

$score_validation_sampling
[1] "Uniform"

$diagnostics
[1] TRUE

$fast_mode
[1] TRUE

$force_load_balance
[1] TRUE

$variable_importances
[1] TRUE

$replicate_training_data
[1] TRUE

$single_node_mode
[1] FALSE

$shuffle_training_data
[1] FALSE

$missing_values_handling
[1] "MeanImputation"

$quiet_mode
[1] FALSE

$autoencoder
[1] FALSE

$sparse
[1] FALSE

$col_major
[1] FALSE

$average_activation
[1] 0

$sparsity_beta
[1] 0

$max_categorical_features
[1] 2147483647

$reproducible
[1] FALSE

$export_weights_and_biases
[1] FALSE

$mini_batch_size
[1] 1

$categorical_encoding
[1] "AUTO"

$elastic_averaging
[1] FALSE

$elastic_averaging_moving_rate
[1] 0.9

$elastic_averaging_regularization
[1] 0.001

$x
 [1] "Week"                   "Team.Opponent.QB.1.ovr" "Team.Opponent.WR.1.ovr" "Team.Opponent.WR.2.ovr"
 [5] "Team.Opponent.WR.3.ovr" "Team.Opponent.RB.1.ovr" "Team.Opponent.RB.2.ovr" "Team.Opponent.OL.1.ovr"
 [9] "Team.Opponent.OL.2.ovr" "Team.Opponent.OL.3.ovr" "Team.Opponent.OL.4.ovr" "Team.Opponent.OL.5.ovr"
[13] "Team.Opponent.TE.1.ovr" "Team.Opponent.DL.1.ovr" "Team.Opponent.DL.2.ovr" "Team.Opponent.DL.3.ovr"
[17] "Team.Opponent.DL.4.ovr" "Team.Opponent.LB.1.ovr" "Team.Opponent.LB.2.ovr" "Team.Opponent.LB.3.ovr"
[21] "Team.Opponent.CB.1.ovr" "Team.Opponent.CB.2.ovr" "Team.Opponent.CB.3.ovr" "Team.Opponent.FS.1.ovr"
[25] "Team.Opponent.SS.1.ovr" "Team.Opponent.K.1.ovr"  "Team.QB.1.ovr"          "Team.WR.1.ovr"         
[29] "Team.WR.2.ovr"          "Team.WR.3.ovr"          "Team.RB.1.ovr"          "Team.RB.2.ovr"         
[33] "Team.OL.1.ovr"          "Team.OL.2.ovr"          "Team.OL.3.ovr"          "Team.OL.4.ovr"         
[37] "Team.OL.5.ovr"          "Team.TE.1.ovr"          "Team.DL.1.ovr"          "Team.DL.2.ovr"         
[41] "Team.DL.3.ovr"          "Team.DL.4.ovr"          "Team.LB.1.ovr"          "Team.LB.2.ovr"         
[45] "Team.LB.3.ovr"          "Team.CB.1.ovr"          "Team.CB.2.ovr"          "Team.CB.3.ovr"         
[49] "Team.FS.1.ovr"          "Team.SS.1.ovr"          "Team.K.1.ovr"           "Overall"               

$y
[1] "FP"

H2ORegressionMetrics: deeplearning
** Reported on validation data. **
** Metrics reported on full validation frame **

MSE:  65.41719
RMSE:  8.088089
MAE:  6.037651
RMSLE:  0.6573575
Mean Residual Deviance :  65.41719

