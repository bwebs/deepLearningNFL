  |                                                                                                                  |                                                                                                          |   0%  |                                                                                                                  |=                                                                                                         |   1%  |                                                                                                                  |==                                                                                                        |   2%  |                                                                                                                  |===                                                                                                       |   2%  |                                                                                                                  |===                                                                                                       |   3%  |                                                                                                                  |====                                                                                                      |   3%  |                                                                                                                  |====                                                                                                      |   4%  |                                                                                                                  |=====                                                                                                     |   4%  |                                                                                                                  |=====                                                                                                     |   5%  |                                                                                                                  |======                                                                                                    |   5%  |                                                                                                                  |======                                                                                                    |   6%  |                                                                                                                  |=======                                                                                                   |   6%  |                                                                                                                  |=======                                                                                                   |   7%  |                                                                                                                  |========                                                                                                  |   7%  |                                                                                                                  |========                                                                                                  |   8%  |                                                                                                                  |=========                                                                                                 |   8%  |                                                                                                                  |=========                                                                                                 |   9%  |                                                                                                                  |==========                                                                                                |   9%  |                                                                                                                  |==========                                                                                                |  10%  |                                                                                                                  |===========                                                                                               |  10%  |                                                                                                                  |===========                                                                                               |  11%  |                                                                                                                  |============                                                                                              |  11%  |                                                                                                                  |============                                                                                              |  12%  |                                                                                                                  |=============                                                                                             |  12%  |                                                                                                                  |=============                                                                                             |  13%  |                                                                                                                  |==============                                                                                            |  13%  |                                                                                                                  |==============                                                                                            |  14%  |                                                                                                                  |===============                                                                                           |  14%  |                                                                                                                  |===============                                                                                           |  15%  |                                                                                                                  |================                                                                                          |  15%  |                                                                                                                  |=================                                                                                         |  16%  |                                                                                                                  |==================                                                                                        |  17%  |                                                                                                                  |===================                                                                                       |  17%  |                                                                                                                  |===================                                                                                       |  18%  |                                                                                                                  |====================                                                                                      |  18%  |                                                                                                                  |====================                                                                                      |  19%  |                                                                                                                  |=====================                                                                                     |  19%  |                                                                                                                  |=====================                                                                                     |  20%  |                                                                                                                  |======================                                                                                    |  20%  |                                                                                                                  |======================                                                                                    |  21%  |                                                                                                                  |=======================                                                                                   |  21%  |                                                                                                                  |=======================                                                                                   |  22%  |                                                                                                                  |========================                                                                                  |  22%  |                                                                                                                  |========================                                                                                  |  23%  |                                                                                                                  |=========================                                                                                 |  23%  |                                                                                                                  |=========================                                                                                 |  24%  |                                                                                                                  |==========================                                                                                |  24%  |                                                                                                                  |==========================                                                                                |  25%  |                                                                                                                  |===========================                                                                               |  25%  |                                                                                                                  |===========================                                                                               |  26%  |                                                                                                                  |============================                                                                              |  26%  |                                                                                                                  |============================                                                                              |  27%  |                                                                                                                  |=============================                                                                             |  27%  |                                                                                                                  |=============================                                                                             |  28%  |                                                                                                                  |==============================                                                                            |  28%  |                                                                                                                  |==============================                                                                            |  29%  |                                                                                                                  |===============================                                                                           |  29%  |                                                                                                                  |===============================                                                                           |  30%  |                                                                                                                  |================================                                                                          |  30%  |                                                                                                                  |================================                                                                          |  31%  |                                                                                                                  |=================================                                                                         |  31%  |                                                                                                                  |=================================                                                                         |  32%  |                                                                                                                  |==================================                                                                        |  32%  |                                                                                                                  |==================================                                                                        |  33%  |                                                                                                                  |===================================                                                                       |  33%  |                                                                                                                  |====================================                                                                      |  33%  |                                                                                                                  |====================================                                                                      |  34%  |                                                                                                                  |=====================================                                                                     |  34%  |                                                                                                                  |=====================================                                                                     |  35%  |                                                                                                                  |======================================                                                                    |  35%  |                                                                                                                  |======================================                                                                    |  36%  |                                                                                                                  |=======================================                                                                   |  36%  |                                                                                                                  |=======================================                                                                   |  37%  |                                                                                                                  |========================================                                                                  |  37%  |                                                                                                                  |========================================                                                                  |  38%  |                                                                                                                  |=========================================                                                                 |  38%  |                                                                                                                  |=========================================                                                                 |  39%  |                                                                                                                  |==========================================                                                                |  39%  |                                                                                                                  |==========================================                                                                |  40%  |                                                                                                                  |===========================================                                                               |  40%  |                                                                                                                  |===========================================                                                               |  41%  |                                                                                                                  |============================================                                                              |  41%  |                                                                                                                  |============================================                                                              |  42%  |                                                                                                                  |=============================================                                                             |  42%  |                                                                                                                  |=============================================                                                             |  43%  |                                                                                                                  |==============================================                                                            |  43%  |                                                                                                                  |==============================================                                                            |  44%  |                                                                                                                  |===============================================                                                           |  44%  |                                                                                                                  |===============================================                                                           |  45%  |                                                                                                                  |================================================                                                          |  45%  |                                                                                                                  |================================================                                                          |  46%  |                                                                                                                  |=================================================                                                         |  46%  |                                                                                                                  |=================================================                                                         |  47%  |                                                                                                                  |==================================================                                                        |  47%  |                                                                                                                  |==================================================                                                        |  48%  |                                                                                                                  |===================================================                                                       |  48%  |                                                                                                                  |====================================================                                                      |  49%  |                                                                                                                  |=====================================================                                                     |  50%  |                                                                                                                  |======================================================                                                    |  50%  |                                                                                                                  |======================================================                                                    |  51%  |                                                                                                                  |=======================================================                                                   |  51%  |                                                                                                                  |=======================================================                                                   |  52%  |                                                                                                                  |========================================================                                                  |  52%  |                                                                                                                  |========================================================                                                  |  53%  |                                                                                                                  |=========================================================                                                 |  53%  |                                                                                                                  |=========================================================                                                 |  54%  |                                                                                                                  |==========================================================                                                |  54%  |                                                                                                                  |==========================================================                                                |  55%  |                                                                                                                  |===========================================================                                               |  55%  |                                                                                                                  |===========================================================                                               |  56%  |                                                                                                                  |============================================================                                              |  56%  |                                                                                                                  |============================================================                                              |  57%  |                                                                                                                  |=============================================================                                             |  57%  |                                                                                                                  |=============================================================                                             |  58%  |                                                                                                                  |==============================================================                                            |  58%  |                                                                                                                  |==============================================================                                            |  59%  |                                                                                                                  |===============================================================                                           |  59%  |                                                                                                                  |===============================================================                                           |  60%  |                                                                                                                  |================================================================                                          |  60%  |                                                                                                                  |================================================================                                          |  61%  |                                                                                                                  |=================================================================                                         |  61%  |                                                                                                                  |=================================================================                                         |  62%  |                                                                                                                  |==================================================================                                        |  62%  |                                                                                                                  |==================================================================                                        |  63%  |                                                                                                                  |===================================================================                                       |  63%  |                                                                                                                  |===================================================================                                       |  64%  |                                                                                                                  |====================================================================                                      |  64%  |                                                                                                                  |====================================================================                                      |  65%  |                                                                                                                  |=====================================================================                                     |  65%  |                                                                                                                  |=====================================================================                                     |  66%  |                                                                                                                  |======================================================================                                    |  66%  |                                                                                                                  |=======================================================================                                   |  67%  |                                                                                                                  |========================================================================                                  |  67%  |                                                                                                                  |========================================================================                                  |  68%  |                                                                                                                  |=========================================================================                                 |  68%  |                                                                                                                  |=========================================================================                                 |  69%  |                                                                                                                  |==========================================================================                                |  69%  |                                                                                                                  |==========================================================================                                |  70%  |                                                                                                                  |===========================================================================                               |  70%  |                                                                                                                  |===========================================================================                               |  71%  |                                                                                                                  |============================================================================                              |  71%  |                                                                                                                  |============================================================================                              |  72%  |                                                                                                                  |=============================================================================                             |  72%  |                                                                                                                  |=============================================================================                             |  73%  |                                                                                                                  |==============================================================================                            |  73%  |                                                                                                                  |==============================================================================                            |  74%  |                                                                                                                  |===============================================================================                           |  74%  |                                                                                                                  |===============================================================================                           |  75%  |                                                                                                                  |================================================================================                          |  75%  |                                                                                                                  |================================================================================                          |  76%  |                                                                                                                  |=================================================================================                         |  76%  |                                                                                                                  |=================================================================================                         |  77%  |                                                                                                                  |==================================================================================                        |  77%  |                                                                                                                  |==================================================================================                        |  78%  |                                                                                                                  |===================================================================================                       |  78%  |                                                                                                                  |===================================================================================                       |  79%  |                                                                                                                  |====================================================================================                      |  79%  |                                                                                                                  |====================================================================================                      |  80%  |                                                                                                                  |=====================================================================================                     |  80%  |                                                                                                                  |=====================================================================================                     |  81%  |                                                                                                                  |======================================================================================                    |  81%  |                                                                                                                  |======================================================================================                    |  82%  |                                                                                                                  |==========================================================================================================| 100%
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10.3970763269842
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:34] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:34] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-08
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Rectifier
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-07
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.01
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10.3970763269842
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 16
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
 Hyper-parameter: hidden, 32
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 10
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, Maxout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
Hyper-parameter: activation, MaxoutWithDropout
Hyper-parameter: epochs, 20
Hyper-parameter: hidden, 64
 Hyper-parameter: hidden, 64
Hyper-parameter: input_dropout_ratio, 0.05
Hyper-parameter: rate, 0.02
Hyper-parameter: rate_annealing, 1e-06
[2016-09-28 14:28:40] failure_details: DistributedException from /127.0.0.1:54321 
[2016-09-28 14:28:40] failure_stack_traces: DistributedException from /127.0.0.1:54321, caused by java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at water.MRTask.getResult(MRTask.java:477)
	at water.MRTask.getResult(MRTask.java:485)
	at water.MRTask.doAll(MRTask.java:389)
	at water.MRTask.doAll(MRTask.java:384)
	at hex.Model.scoreMetrics(Model.java:985)
	at hex.deeplearning.DeepLearningModel.doScoring(DeepLearningModel.java:385)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.trainModel(DeepLearning.java:430)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.buildModel(DeepLearning.java:301)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.computeImpl(DeepLearning.java:208)
	at hex.ModelBuilder$Driver.compute2(ModelBuilder.java:168)
	at hex.deeplearning.DeepLearning$DeepLearningDriver.compute2(DeepLearning.java:201)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1198)
	at jsr166y.CountedCompleter.exec(CountedCompleter.java:468)
	at jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:263)
	at jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:974)
	at jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1477)
	at jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: java.lang.UnsupportedOperationException: 

Trying to predict with an unstable model.
Job was aborted due to observed numerical instability (exponential growth).
Either the weights or the bias values are unreasonably large or lead to large activation values.
Try a different initial distribution, a bounded activation function (Tanh), adding regularization
(via max_w2, l1, l2, dropout) or learning rate (either enable adaptive_rate or use a smaller learning rate or faster annealing).

For more information visit:
  http://jira.h2o.ai/browse/TN-4
	at hex.deeplearning.DeepLearningModel.score0(DeepLearningModel.java:692)
	at hex.Model.score0(Model.java:1068)
	at hex.Model$BigScore.map(Model.java:1034)
	at water.MRTask.compute2(MRTask.java:645)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.MRTask.compute2(MRTask.java:585)
	at water.H2O$H2OCountedCompleter.compute1(H2O.java:1201)
	at hex.Model$BigScore$Icer.compute1(Model$BigScore$Icer.java)
	at water.H2O$H2OCountedCompleter.compute(H2O.java:1197)
	... 5 more
 
H2O Grid Details
================

Grid ID: dl_gridRB 
Used hyper parameters: 
  -  activation 
  -  epochs 
  -  hidden 
  -  input_dropout_ratio 
  -  rate 
  -  rate_annealing 
Number of models: 530 
Number of failed models: 190 

Hyper-Parameter Search Summary: ordered by increasing rmse
            activation             epochs      hidden input_dropout_ratio rate rate_annealing           model_ids
1 RectifierWithDropout 10.379318720863129 [I@71ba3776                 0.0 0.01         1.0E-7 dl_gridRB_model_243
2 RectifierWithDropout 10.395979494820258  [I@e9b315d                0.05 0.01         1.0E-6 dl_gridRB_model_567
3 RectifierWithDropout  10.40118405102185  [I@b2a818e                0.05 0.01         1.0E-7 dl_gridRB_model_303
4 RectifierWithDropout 10.386823613561663 [I@50a439b6                0.05 0.01         1.0E-8  dl_gridRB_model_75
5 RectifierWithDropout  20.73906957418589 [I@7085a553                 0.0 0.01         1.0E-8  dl_gridRB_model_33
               rmse
1 6.099251046389229
2 6.121403382283506
3 6.124962374256372
4 6.132246447509328
5 6.132751166014198

---
    activation             epochs      hidden input_dropout_ratio rate rate_annealing           model_ids
525       Tanh 20.824916407463853 [I@6c2825ce                 0.0 0.02         1.0E-6 dl_gridRB_model_655
526       Tanh  20.79638565525162 [I@46c37ec6                0.05 0.02         1.0E-7 dl_gridRB_model_475
527       Tanh 10.393816161088438 [I@6ab40e5a                 0.0 0.02         1.0E-6 dl_gridRB_model_613
528       Tanh 20.825350547766465  [I@3296be3                0.05 0.02         1.0E-6 dl_gridRB_model_679
529       Tanh  20.83051095707648 [I@2e82281d                0.05 0.02         1.0E-6 dl_gridRB_model_715
530       Tanh 20.770248394330928 [I@736a5645                 0.0 0.02         1.0E-8 dl_gridRB_model_175
                  rmse
525  8.064091701378171
526  8.085487336635344
527   8.10634186204166
528  8.244823554581483
529  9.035995841714326
530 10.171601465181249
Failed models
-------------
        activation             epochs       hidden input_dropout_ratio rate rate_annealing status_failed
            Maxout               10.0     [32, 32]                 0.0 0.01         1.0E-8          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.01         1.0E-8          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-8          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-8          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.01         1.0E-8          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.01         1.0E-8          FAIL
            Maxout               10.0     [32, 32]                0.05 0.01         1.0E-8          FAIL
            Maxout               20.0     [32, 32]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.01         1.0E-8          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.01         1.0E-8          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.01         1.0E-8          FAIL
            Maxout               10.0     [64, 64]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.01         1.0E-8          FAIL
            Maxout               20.0     [64, 64]                0.05 0.01         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.01         1.0E-8          FAIL
            Maxout               10.0         [16]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0         [16]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0         [16]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0         [16]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0         [32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0         [32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0         [32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0         [32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [32, 32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.02         1.0E-8          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.02         1.0E-8          FAIL
            Maxout               10.0         [16]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0         [16]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0         [16]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0         [16]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0         [32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0         [32]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0         [32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0         [32]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0     [32, 32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [32, 32]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0     [32, 32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.02         1.0E-8          FAIL
         Rectifier               10.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
            Maxout               20.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.02         1.0E-8          FAIL
            Maxout               10.0         [32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-7          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.01         1.0E-7          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.01         1.0E-7          FAIL
            Maxout               10.0     [32, 32]                0.05 0.01         1.0E-7          FAIL
            Maxout               20.0     [32, 32]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.01         1.0E-7          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.01         1.0E-7          FAIL
            Maxout               10.0     [64, 64]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.01         1.0E-7          FAIL
            Maxout               20.0     [64, 64]                0.05 0.01         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.01         1.0E-7          FAIL
            Maxout               10.0         [16]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0         [16]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0         [16]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0         [16]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0         [32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0         [32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0         [32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0         [32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [32, 32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.02         1.0E-7          FAIL
         Rectifier               10.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.02         1.0E-7          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.02         1.0E-7          FAIL
            Maxout               10.0         [16]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0         [16]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0         [16]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0         [16]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0         [32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0         [32]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0         [32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0         [32]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0     [32, 32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [32, 32]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0     [32, 32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
         Rectifier               20.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
            Maxout               20.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.02         1.0E-7          FAIL
            Maxout               10.0         [32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0         [32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.01         1.0E-6          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.01         1.0E-6          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.01         1.0E-6          FAIL
            Maxout               10.0     [32, 32]                0.05 0.01         1.0E-6          FAIL
            Maxout               20.0     [32, 32]                0.05 0.01         1.0E-6          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.01         1.0E-6          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.01         1.0E-6          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.01         1.0E-6          FAIL
            Maxout               10.0     [64, 64]                0.05 0.01         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.01         1.0E-6          FAIL
            Maxout               20.0     [64, 64]                0.05 0.01         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.01         1.0E-6          FAIL
            Maxout               10.0         [16]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout 10.397076326984177         [16]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0         [16]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0         [16]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0         [32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0         [32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0         [32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0         [32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0     [32, 32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [32, 32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0     [32, 32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [32, 32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
            Maxout               20.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [64, 64]                 0.0 0.02         1.0E-6          FAIL
            Maxout               10.0         [16]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0         [16]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0         [16]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0         [16]                0.05 0.02         1.0E-6          FAIL
            Maxout               10.0         [32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0         [32]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0         [32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0         [32]                0.05 0.02         1.0E-6          FAIL
            Maxout               10.0     [32, 32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [32, 32]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0     [32, 32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [32, 32]                0.05 0.02         1.0E-6          FAIL
            Maxout               10.0 [32, 32, 32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0 [32, 32, 32]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0 [32, 32, 32]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0 [32, 32, 32]                0.05 0.02         1.0E-6          FAIL
            Maxout               10.0     [64, 64]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               10.0     [64, 64]                0.05 0.02         1.0E-6          FAIL
            Maxout               20.0     [64, 64]                0.05 0.02         1.0E-6          FAIL
 MaxoutWithDropout               20.0     [64, 64]                0.05 0.02         1.0E-6          FAIL
                                  msgs_failed
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
 "DistributedException from /127.0.0.1:54321"
H2O Grid Summary
================

Grid ID: dl_gridRB 
Used hyper parameters: 
  -  activation 
  -  epochs 
  -  hidden 
  -  input_dropout_ratio 
  -  rate 
  -  rate_annealing 
Number of models: 530 
  -  dl_gridRB_model_243 
  -  dl_gridRB_model_567 
  -  dl_gridRB_model_303 
  -  dl_gridRB_model_75 
  -  dl_gridRB_model_33 
  -  dl_gridRB_model_489 
  -  dl_gridRB_model_321 
  -  dl_gridRB_model_585 
  -  dl_gridRB_model_27 
  -  dl_gridRB_model_51 
  -  dl_gridRB_model_543 
  -  dl_gridRB_model_39 
  -  dl_gridRB_model_495 
  -  dl_gridRB_model_591 
  -  dl_gridRB_model_105 
  -  dl_gridRB_model_273 
  -  dl_gridRB_model_507 
  -  dl_gridRB_model_249 
  -  dl_gridRB_model_531 
  -  dl_gridRB_model_351 
  -  dl_gridRB_model_9 
  -  dl_gridRB_model_45 
  -  dl_gridRB_model_490 
  -  dl_gridRB_model_69 
  -  dl_gridRB_model_274 
  -  dl_gridRB_model_328 
  -  dl_gridRB_model_327 
  -  dl_gridRB_model_525 
  -  dl_gridRB_model_513 
  -  dl_gridRB_model_549 
  -  dl_gridRB_model_267 
  -  dl_gridRB_model_255 
  -  dl_gridRB_model_574 
  -  dl_gridRB_model_183 
  -  dl_gridRB_model_310 
  -  dl_gridRB_model_112 
  -  dl_gridRB_model_10 
  -  dl_gridRB_model_297 
  -  dl_gridRB_model_15 
  -  dl_gridRB_model_508 
  -  dl_gridRB_model_501 
  -  dl_gridRB_model_573 
  -  dl_gridRB_model_285 
  -  dl_gridRB_model_334 
  -  dl_gridRB_model_352 
  -  dl_gridRB_model_483 
  -  dl_gridRB_model_519 
  -  dl_gridRB_model_57 
  -  dl_gridRB_model_250 
  -  dl_gridRB_model_286 
  -  dl_gridRB_model_538 
  -  dl_gridRB_model_3 
  -  dl_gridRB_model_345 
  -  dl_gridRB_model_63 
  -  dl_gridRB_model_93 
  -  dl_gridRB_model_4 
  -  dl_gridRB_model_46 
  -  dl_gridRB_model_279 
  -  dl_gridRB_model_514 
  -  dl_gridRB_model_165 
  -  dl_gridRB_model_28 
  -  dl_gridRB_model_502 
  -  dl_gridRB_model_111 
  -  dl_gridRB_model_280 
  -  dl_gridRB_model_550 
  -  dl_gridRB_model_87 
  -  dl_gridRB_model_64 
  -  dl_gridRB_model_304 
  -  dl_gridRB_model_70 
  -  dl_gridRB_model_316 
  -  dl_gridRB_model_532 
  -  dl_gridRB_model_99 
  -  dl_gridRB_model_40 
  -  dl_gridRB_model_586 
  -  dl_gridRB_model_309 
  -  dl_gridRB_model_580 
  -  dl_gridRB_model_484 
  -  dl_gridRB_model_315 
  -  dl_gridRB_model_220 
  -  dl_gridRB_model_16 
  -  dl_gridRB_model_544 
  -  dl_gridRB_model_291 
  -  dl_gridRB_model_201 
  -  dl_gridRB_model_597 
  -  dl_gridRB_model_568 
  -  dl_gridRB_model_628 
  -  dl_gridRB_model_339 
  -  dl_gridRB_model_298 
  -  dl_gridRB_model_58 
  -  dl_gridRB_model_94 
  -  dl_gridRB_model_520 
  -  dl_gridRB_model_526 
  -  dl_gridRB_model_88 
  -  dl_gridRB_model_300 
  -  dl_gridRB_model_90 
  -  dl_gridRB_model_100 
  -  dl_gridRB_model_117 
  -  dl_gridRB_model_292 
  -  dl_gridRB_model_348 
  -  dl_gridRB_model_34 
  -  dl_gridRB_model_561 
  -  dl_gridRB_model_592 
  -  dl_gridRB_model_343 
  -  dl_gridRB_model_537 
  -  dl_gridRB_model_264 
  -  dl_gridRB_model_22 
  -  dl_gridRB_model_244 
  -  dl_gridRB_model_5 
  -  dl_gridRB_model_423 
  -  dl_gridRB_model_268 
  -  dl_gridRB_model_245 
  -  dl_gridRB_model_598 
  -  dl_gridRB_model_357 
  -  dl_gridRB_model_465 
  -  dl_gridRB_model_21 
  -  dl_gridRB_model_369 
  -  dl_gridRB_model_577 
  -  dl_gridRB_model_262 
  -  dl_gridRB_model_333 
  -  dl_gridRB_model_393 
  -  dl_gridRB_model_135 
  -  dl_gridRB_model_261 
  -  dl_gridRB_model_52 
  -  dl_gridRB_model_71 
  -  dl_gridRB_model_405 
  -  dl_gridRB_model_81 
  -  dl_gridRB_model_705 
  -  dl_gridRB_model_663 
  -  dl_gridRB_model_579 
  -  dl_gridRB_model_556 
  -  dl_gridRB_model_340 
  -  dl_gridRB_model_106 
  -  dl_gridRB_model_540 
  -  dl_gridRB_model_496 
  -  dl_gridRB_model_603 
  -  dl_gridRB_model_118 
  -  dl_gridRB_model_129 
  -  dl_gridRB_model_565 
  -  dl_gridRB_model_528 
  -  dl_gridRB_model_363 
  -  dl_gridRB_model_675 
  -  dl_gridRB_model_256 
  -  dl_gridRB_model_189 
  -  dl_gridRB_model_555 
  -  dl_gridRB_model_153 
  -  dl_gridRB_model_336 
  -  dl_gridRB_model_225 
  -  dl_gridRB_model_184 
  -  dl_gridRB_model_29 
  -  dl_gridRB_model_43 
  -  dl_gridRB_model_510 
  -  dl_gridRB_model_346 
  -  dl_gridRB_model_700 
  -  dl_gridRB_model_375 
  -  dl_gridRB_model_76 
  -  dl_gridRB_model_491 
  -  dl_gridRB_model_60 
  -  dl_gridRB_model_557 
  -  dl_gridRB_model_241 
  -  dl_gridRB_model_337 
  -  dl_gridRB_model_370 
  -  dl_gridRB_model_276 
  -  dl_gridRB_model_294 
  -  dl_gridRB_model_569 
  -  dl_gridRB_model_564 
  -  dl_gridRB_model_213 
  -  dl_gridRB_model_534 
  -  dl_gridRB_model_604 
  -  dl_gridRB_model_358 
  -  dl_gridRB_model_77 
  -  dl_gridRB_model_141 
  -  dl_gridRB_model_226 
  -  dl_gridRB_model_640 
  -  dl_gridRB_model_147 
  -  dl_gridRB_model_430 
  -  dl_gridRB_model_282 
  -  dl_gridRB_model_545 
  -  dl_gridRB_model_633 
  -  dl_gridRB_model_123 
  -  dl_gridRB_model_466 
  -  dl_gridRB_model_453 
  -  dl_gridRB_model_208 
  -  dl_gridRB_model_651 
  -  dl_gridRB_model_48 
  -  dl_gridRB_model_265 
  -  dl_gridRB_model_195 
  -  dl_gridRB_model_82 
  -  dl_gridRB_model_576 
  -  dl_gridRB_model_329 
  -  dl_gridRB_model_381 
  -  dl_gridRB_model_305 
  -  dl_gridRB_model_429 
  -  dl_gridRB_model_504 
  -  dl_gridRB_model_97 
  -  dl_gridRB_model_448 
  -  dl_gridRB_model_669 
  -  dl_gridRB_model_37 
  -  dl_gridRB_model_417 
  -  dl_gridRB_model_171 
  -  dl_gridRB_model_30 
  -  dl_gridRB_model_435 
  -  dl_gridRB_model_681 
  -  dl_gridRB_model_387 
  -  dl_gridRB_model_517 
  -  dl_gridRB_model_485 
  -  dl_gridRB_model_562 
  -  dl_gridRB_model_54 
  -  dl_gridRB_model_85 
  -  dl_gridRB_model_108 
  -  dl_gridRB_model_588 
  -  dl_gridRB_model_477 
  -  dl_gridRB_model_447 
  -  dl_gridRB_model_130 
  -  dl_gridRB_model_36 
  -  dl_gridRB_model_664 
  -  dl_gridRB_model_11 
  -  dl_gridRB_model_114 
  -  dl_gridRB_model_639 
  -  dl_gridRB_model_17 
  -  dl_gridRB_model_301 
  -  dl_gridRB_model_330 
  -  dl_gridRB_model_424 
  -  dl_gridRB_model_124 
  -  dl_gridRB_model_251 
  -  dl_gridRB_model_177 
  -  dl_gridRB_model_699 
  -  dl_gridRB_model_103 
  -  dl_gridRB_model_657 
  -  dl_gridRB_model_207 
  -  dl_gridRB_model_96 
  -  dl_gridRB_model_364 
  -  dl_gridRB_model_634 
  -  dl_gridRB_model_324 
  -  dl_gridRB_model_688 
  -  dl_gridRB_model_570 
  -  dl_gridRB_model_551 
  -  dl_gridRB_model_621 
  -  dl_gridRB_model_399 
  -  dl_gridRB_model_277 
  -  dl_gridRB_model_288 
  -  dl_gridRB_model_609 
  -  dl_gridRB_model_388 
  -  dl_gridRB_model_646 
  -  dl_gridRB_model_706 
  -  dl_gridRB_model_214 
  -  dl_gridRB_model_460 
  -  dl_gridRB_model_148 
  -  dl_gridRB_model_322 
  -  dl_gridRB_model_190 
  -  dl_gridRB_model_42 
  -  dl_gridRB_model_102 
  -  dl_gridRB_model_684 
  -  dl_gridRB_model_589 
  -  dl_gridRB_model_270 
  -  dl_gridRB_model_648 
  -  dl_gridRB_model_697 
  -  dl_gridRB_model_459 
  -  dl_gridRB_model_354 
  -  dl_gridRB_model_547 
  -  dl_gridRB_model_25 
  -  dl_gridRB_model_6 
  -  dl_gridRB_model_717 
  -  dl_gridRB_model_24 
  -  dl_gridRB_model_0 
  -  dl_gridRB_model_693 
  -  dl_gridRB_model_542 
  -  dl_gridRB_model_154 
  -  dl_gridRB_model_515 
  -  dl_gridRB_model_252 
  -  dl_gridRB_model_331 
  -  dl_gridRB_model_615 
  -  dl_gridRB_model_563 
  -  dl_gridRB_model_711 
  -  dl_gridRB_model_237 
  -  dl_gridRB_model_242 
  -  dl_gridRB_model_390 
  -  dl_gridRB_model_687 
  -  dl_gridRB_model_627 
  -  dl_gridRB_model_471 
  -  dl_gridRB_model_509 
  -  dl_gridRB_model_610 
  -  dl_gridRB_model_283 
  -  dl_gridRB_model_411 
  -  dl_gridRB_model_444 
  -  dl_gridRB_model_497 
  -  dl_gridRB_model_690 
  -  dl_gridRB_model_486 
  -  dl_gridRB_model_481 
  -  dl_gridRB_model_594 
  -  dl_gridRB_model_65 
  -  dl_gridRB_model_210 
  -  dl_gridRB_model_231 
  -  dl_gridRB_model_505 
  -  dl_gridRB_model_394 
  -  dl_gridRB_model_307 
  -  dl_gridRB_model_120 
  -  dl_gridRB_model_652 
  -  dl_gridRB_model_342 
  -  dl_gridRB_model_157 
  -  dl_gridRB_model_222 
  -  dl_gridRB_model_645 
  -  dl_gridRB_model_219 
  -  dl_gridRB_model_1 
  -  dl_gridRB_model_204 
  -  dl_gridRB_model_412 
  -  dl_gridRB_model_61 
  -  dl_gridRB_model_624 
  -  dl_gridRB_model_694 
  -  dl_gridRB_model_541 
  -  dl_gridRB_model_7 
  -  dl_gridRB_model_83 
  -  dl_gridRB_model_400 
  -  dl_gridRB_model_622 
  -  dl_gridRB_model_516 
  -  dl_gridRB_model_480 
  -  dl_gridRB_model_23 
  -  dl_gridRB_model_708 
  -  dl_gridRB_model_228 
  -  dl_gridRB_model_454 
  -  dl_gridRB_model_49 
  -  dl_gridRB_model_637 
  -  dl_gridRB_model_136 
  -  dl_gridRB_model_159 
  -  dl_gridRB_model_582 
  -  dl_gridRB_model_384 
  -  dl_gridRB_model_234 
  -  dl_gridRB_model_583 
  -  dl_gridRB_model_402 
  -  dl_gridRB_model_441 
  -  dl_gridRB_model_660 
  -  dl_gridRB_model_456 
  -  dl_gridRB_model_522 
  -  dl_gridRB_model_174 
  -  dl_gridRB_model_238 
  -  dl_gridRB_model_72 
  -  dl_gridRB_model_600 
  -  dl_gridRB_model_670 
  -  dl_gridRB_model_67 
  -  dl_gridRB_model_289 
  -  dl_gridRB_model_457 
  -  dl_gridRB_model_89 
  -  dl_gridRB_model_84 
  -  dl_gridRB_model_702 
  -  dl_gridRB_model_642 
  -  dl_gridRB_model_696 
  -  dl_gridRB_model_571 
  -  dl_gridRB_model_397 
  -  dl_gridRB_model_162 
  -  dl_gridRB_model_575 
  -  dl_gridRB_model_408 
  -  dl_gridRB_model_503 
  -  dl_gridRB_model_311 
  -  dl_gridRB_model_156 
  -  dl_gridRB_model_559 
  -  dl_gridRB_model_636 
  -  dl_gridRB_model_492 
  -  dl_gridRB_model_168 
  -  dl_gridRB_model_474 
  -  dl_gridRB_model_317 
  -  dl_gridRB_model_450 
  -  dl_gridRB_model_529 
  -  dl_gridRB_model_436 
  -  dl_gridRB_model_306 
  -  dl_gridRB_model_714 
  -  dl_gridRB_model_150 
  -  dl_gridRB_model_302 
  -  dl_gridRB_model_144 
  -  dl_gridRB_model_2 
  -  dl_gridRB_model_217 
  -  dl_gridRB_model_12 
  -  dl_gridRB_model_406 
  -  dl_gridRB_model_269 
  -  dl_gridRB_model_246 
  -  dl_gridRB_model_488 
  -  dl_gridRB_model_468 
  -  dl_gridRB_model_232 
  -  dl_gridRB_model_166 
  -  dl_gridRB_model_493 
  -  dl_gridRB_model_511 
  -  dl_gridRB_model_426 
  -  dl_gridRB_model_13 
  -  dl_gridRB_model_325 
  -  dl_gridRB_model_349 
  -  dl_gridRB_model_74 
  -  dl_gridRB_model_676 
  -  dl_gridRB_model_360 
  -  dl_gridRB_model_414 
  -  dl_gridRB_model_91 
  -  dl_gridRB_model_376 
  -  dl_gridRB_model_240 
  -  dl_gridRB_model_223 
  -  dl_gridRB_model_438 
  -  dl_gridRB_model_546 
  -  dl_gridRB_model_295 
  -  dl_gridRB_model_442 
  -  dl_gridRB_model_487 
  -  dl_gridRB_model_382 
  -  dl_gridRB_model_109 
  -  dl_gridRB_model_451 
  -  dl_gridRB_model_31 
  -  dl_gridRB_model_482 
  -  dl_gridRB_model_115 
  -  dl_gridRB_model_198 
  -  dl_gridRB_model_180 
  -  dl_gridRB_model_523 
  -  dl_gridRB_model_712 
  -  dl_gridRB_model_643 
  -  dl_gridRB_model_666 
  -  dl_gridRB_model_463 
  -  dl_gridRB_model_68 
  -  dl_gridRB_model_66 
  -  dl_gridRB_model_181 
  -  dl_gridRB_model_205 
  -  dl_gridRB_model_163 
  -  dl_gridRB_model_552 
  -  dl_gridRB_model_366 
  -  dl_gridRB_model_62 
  -  dl_gridRB_model_8 
  -  dl_gridRB_model_478 
  -  dl_gridRB_model_312 
  -  dl_gridRB_model_323 
  -  dl_gridRB_model_132 
  -  dl_gridRB_model_630 
  -  dl_gridRB_model_178 
  -  dl_gridRB_model_145 
  -  dl_gridRB_model_654 
  -  dl_gridRB_model_553 
  -  dl_gridRB_model_472 
  -  dl_gridRB_model_445 
  -  dl_gridRB_model_55 
  -  dl_gridRB_model_78 
  -  dl_gridRB_model_391 
  -  dl_gridRB_model_142 
  -  dl_gridRB_model_160 
  -  dl_gridRB_model_672 
  -  dl_gridRB_model_73 
  -  dl_gridRB_model_257 
  -  dl_gridRB_model_685 
  -  dl_gridRB_model_554 
  -  dl_gridRB_model_263 
  -  dl_gridRB_model_595 
  -  dl_gridRB_model_682 
  -  dl_gridRB_model_308 
  -  dl_gridRB_model_259 
  -  dl_gridRB_model_79 
  -  dl_gridRB_model_319 
  -  dl_gridRB_model_202 
  -  dl_gridRB_model_403 
  -  dl_gridRB_model_247 
  -  dl_gridRB_model_378 
  -  dl_gridRB_model_19 
  -  dl_gridRB_model_618 
  -  dl_gridRB_model_138 
  -  dl_gridRB_model_612 
  -  dl_gridRB_model_606 
  -  dl_gridRB_model_18 
  -  dl_gridRB_model_248 
  -  dl_gridRB_model_420 
  -  dl_gridRB_model_196 
  -  dl_gridRB_model_385 
  -  dl_gridRB_model_661 
  -  dl_gridRB_model_192 
  -  dl_gridRB_model_498 
  -  dl_gridRB_model_318 
  -  dl_gridRB_model_14 
  -  dl_gridRB_model_355 
  -  dl_gridRB_model_253 
  -  dl_gridRB_model_418 
  -  dl_gridRB_model_616 
  -  dl_gridRB_model_678 
  -  dl_gridRB_model_361 
  -  dl_gridRB_model_271 
  -  dl_gridRB_model_558 
  -  dl_gridRB_model_718 
  -  dl_gridRB_model_186 
  -  dl_gridRB_model_625 
  -  dl_gridRB_model_703 
  -  dl_gridRB_model_667 
  -  dl_gridRB_model_172 
  -  dl_gridRB_model_258 
  -  dl_gridRB_model_372 
  -  dl_gridRB_model_320 
  -  dl_gridRB_model_631 
  -  dl_gridRB_model_601 
  -  dl_gridRB_model_126 
  -  dl_gridRB_model_548 
  -  dl_gridRB_model_260 
  -  dl_gridRB_model_658 
  -  dl_gridRB_model_432 
  -  dl_gridRB_model_421 
  -  dl_gridRB_model_127 
  -  dl_gridRB_model_691 
  -  dl_gridRB_model_535 
  -  dl_gridRB_model_313 
  -  dl_gridRB_model_121 
  -  dl_gridRB_model_499 
  -  dl_gridRB_model_314 
  -  dl_gridRB_model_367 
  -  dl_gridRB_model_427 
  -  dl_gridRB_model_151 
  -  dl_gridRB_model_80 
  -  dl_gridRB_model_211 
  -  dl_gridRB_model_20 
  -  dl_gridRB_model_187 
  -  dl_gridRB_model_607 
  -  dl_gridRB_model_709 
  -  dl_gridRB_model_560 
  -  dl_gridRB_model_673 
  -  dl_gridRB_model_619 
  -  dl_gridRB_model_415 
  -  dl_gridRB_model_193 
  -  dl_gridRB_model_379 
  -  dl_gridRB_model_373 
  -  dl_gridRB_model_439 
  -  dl_gridRB_model_649 
  -  dl_gridRB_model_229 
  -  dl_gridRB_model_133 
  -  dl_gridRB_model_469 
  -  dl_gridRB_model_409 
  -  dl_gridRB_model_169 
  -  dl_gridRB_model_139 
  -  dl_gridRB_model_235 
  -  dl_gridRB_model_433 
  -  dl_gridRB_model_199 
  -  dl_gridRB_model_655 
  -  dl_gridRB_model_475 
  -  dl_gridRB_model_613 
  -  dl_gridRB_model_679 
  -  dl_gridRB_model_715 
  -  dl_gridRB_model_175 

Number of failed models: 190 
  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321  -  DistributedException from /127.0.0.1:54321
Note: To see exception stack traces please pass parameter `show_stack_traces = T` to this function.
$model_id
[1] "dl_gridRB_model_243"

$training_frame
[1] "file6a821e6986d3_sid_85d0_95"

$validation_frame
[1] "file6a822212963e_sid_85d0_97"

$nfolds
[1] 5

$keep_cross_validation_predictions
[1] FALSE

$keep_cross_validation_fold_assignment
[1] FALSE

$fold_assignment
[1] "AUTO"

$ignore_const_cols
[1] TRUE

$score_each_iteration
[1] FALSE

$balance_classes
[1] FALSE

$max_after_balance_size
[1] 5

$max_confusion_matrix_size
[1] 20

$max_hit_ratio_k
[1] 0

$overwrite_with_best_model
[1] FALSE

$use_all_factor_levels
[1] TRUE

$standardize
[1] TRUE

$activation
[1] "RectifierWithDropout"

$hidden
[1] 16

$epochs
[1] 10.37932

$train_samples_per_iteration
[1] -2

$target_ratio_comm_to_comp
[1] 0.05

$seed
[1] 8.985217e+18

$adaptive_rate
[1] FALSE

$rho
[1] 0.99

$epsilon
[1] 1e-08

$rate
[1] 0.01

$rate_annealing
[1] 1e-07

$rate_decay
[1] 1

$momentum_start
[1] 0.5

$momentum_ramp
[1] 1e+07

$momentum_stable
[1] 0.9

$nesterov_accelerated_gradient
[1] TRUE

$input_dropout_ratio
[1] 0

$l1
[1] 1e-05

$l2
[1] 1e-05

$max_w2
[1] 10

$initial_weight_distribution
[1] "UniformAdaptive"

$initial_weight_scale
[1] 1

$loss
[1] "Automatic"

$distribution
[1] "AUTO"

$quantile_alpha
[1] 0.5

$tweedie_power
[1] 1.5

$huber_alpha
[1] 0.9

$score_interval
[1] 5

$score_training_samples
[1] 10000

$score_validation_samples
[1] 10000

$score_duty_cycle
[1] 0.025

$classification_stop
[1] 0

$regression_stop
[1] 1e-06

$stopping_rounds
[1] 0

$stopping_metric
[1] "AUTO"

$stopping_tolerance
[1] 0.01

$max_runtime_secs
[1] 0

$score_validation_sampling
[1] "Uniform"

$diagnostics
[1] TRUE

$fast_mode
[1] TRUE

$force_load_balance
[1] TRUE

$variable_importances
[1] TRUE

$replicate_training_data
[1] TRUE

$single_node_mode
[1] FALSE

$shuffle_training_data
[1] FALSE

$missing_values_handling
[1] "MeanImputation"

$quiet_mode
[1] FALSE

$autoencoder
[1] FALSE

$sparse
[1] FALSE

$col_major
[1] FALSE

$average_activation
[1] 0

$sparsity_beta
[1] 0

$max_categorical_features
[1] 2147483647

$reproducible
[1] FALSE

$export_weights_and_biases
[1] FALSE

$mini_batch_size
[1] 1

$categorical_encoding
[1] "AUTO"

$elastic_averaging
[1] FALSE

$elastic_averaging_moving_rate
[1] 0.9

$elastic_averaging_regularization
[1] 0.001

$x
 [1] "Week"                   "Team.Opponent.QB.1.ovr" "Team.Opponent.WR.1.ovr" "Team.Opponent.WR.2.ovr"
 [5] "Team.Opponent.WR.3.ovr" "Team.Opponent.RB.1.ovr" "Team.Opponent.RB.2.ovr" "Team.Opponent.OL.1.ovr"
 [9] "Team.Opponent.OL.2.ovr" "Team.Opponent.OL.3.ovr" "Team.Opponent.OL.4.ovr" "Team.Opponent.OL.5.ovr"
[13] "Team.Opponent.TE.1.ovr" "Team.Opponent.DL.1.ovr" "Team.Opponent.DL.2.ovr" "Team.Opponent.DL.3.ovr"
[17] "Team.Opponent.DL.4.ovr" "Team.Opponent.LB.1.ovr" "Team.Opponent.LB.2.ovr" "Team.Opponent.LB.3.ovr"
[21] "Team.Opponent.CB.1.ovr" "Team.Opponent.CB.2.ovr" "Team.Opponent.CB.3.ovr" "Team.Opponent.FS.1.ovr"
[25] "Team.Opponent.SS.1.ovr" "Team.Opponent.K.1.ovr"  "Team.QB.1.ovr"          "Team.WR.1.ovr"         
[29] "Team.WR.2.ovr"          "Team.WR.3.ovr"          "Team.RB.1.ovr"          "Team.RB.2.ovr"         
[33] "Team.OL.1.ovr"          "Team.OL.2.ovr"          "Team.OL.3.ovr"          "Team.OL.4.ovr"         
[37] "Team.OL.5.ovr"          "Team.TE.1.ovr"          "Team.DL.1.ovr"          "Team.DL.2.ovr"         
[41] "Team.DL.3.ovr"          "Team.DL.4.ovr"          "Team.LB.1.ovr"          "Team.LB.2.ovr"         
[45] "Team.LB.3.ovr"          "Team.CB.1.ovr"          "Team.CB.2.ovr"          "Team.CB.3.ovr"         
[49] "Team.FS.1.ovr"          "Team.SS.1.ovr"          "Team.K.1.ovr"           "Overall"               

$y
[1] "FP"

H2ORegressionMetrics: deeplearning
** Reported on validation data. **
** Metrics reported on full validation frame **

MSE:  45.67443
RMSE:  6.758286
MAE:  5.235664
RMSLE:  1.072749
Mean Residual Deviance :  45.67443

